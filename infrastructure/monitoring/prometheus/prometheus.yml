# Prometheus Configuration for OpenSIPS AI Voice Connector
global:
  scrape_interval: 15s
  evaluation_interval: 15s

# Rule files
rule_files:
  - "rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # AI Voice Connector main service
  - job_name: 'ai-voice-connector'
    static_configs:
      - targets: ['ai-voice-connector:8080']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    scheme: http

  # VAD Service
  - job_name: 'vad-service'
    static_configs:
      - targets: ['vad-service:8080']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # ASR Service
  - job_name: 'asr-service'
    static_configs:
      - targets: ['asr-service:8080']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # LLM Service
  - job_name: 'llm-service'
    static_configs:
      - targets: ['llm-service:8080']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # TTS Service
  - job_name: 'tts-service'
    static_configs:
      - targets: ['tts-service:8080']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # Session Manager Service
  - job_name: 'session-manager'
    static_configs:
      - targets: ['session-manager:8080']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # Context Store Service
  - job_name: 'context-store'
    static_configs:
      - targets: ['context-store:8080']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # Banking Service
  - job_name: 'banking-service'
    static_configs:
      - targets: ['banking-service:8080']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # PostgreSQL Database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres:5432']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Redis Cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # OpenSIPS Health Check (custom exporter)
  - job_name: 'opensips-health'
    static_configs:
      - targets: ['opensips:8087']
    metrics_path: '/health'
    scrape_interval: 30s
    scrape_timeout: 10s

# Alerting rules (will be added later)
alerting:
  alertmanagers:
    - static_configs:
        - targets: []

# Custom metric relabeling for service identification
metric_relabel_configs:
  # Add service labels
  - source_labels: [__name__]
    regex: 'ai_voice_.*'
    target_label: 'component'
    replacement: 'ai-pipeline'

  - source_labels: [__name__]
    regex: 'banking_.*'
    target_label: 'component'
    replacement: 'banking'

  - source_labels: [__name__]
    regex: 'session_.*'
    target_label: 'component'
    replacement: 'session-management'

# Recording rules for aggregate metrics
recording_rules:
  - name: ai_pipeline_latency
    rules:
      # Total pipeline latency (VAD + ASR + LLM + TTS)
      - record: ai_pipeline:total_latency_ms
        expr: |
          (
            ai_voice_vad_processing_duration_ms +
            ai_voice_asr_processing_duration_ms +
            ai_voice_llm_processing_duration_ms +
            ai_voice_tts_processing_duration_ms
          )

      # Pipeline success rate
      - record: ai_pipeline:success_rate
        expr: |
          (
            sum(rate(ai_voice_requests_total{status="success"}[5m])) /
            sum(rate(ai_voice_requests_total[5m]))
          ) * 100

  - name: banking_metrics
    rules:
      # Banking transaction success rate
      - record: banking:transaction_success_rate
        expr: |
          (
            sum(rate(banking_transactions_total{status="success"}[5m])) /
            sum(rate(banking_transactions_total[5m]))
          ) * 100

      # Authentication success rate
      - record: banking:auth_success_rate
        expr: |
          (
            sum(rate(banking_auth_attempts_total{status="success"}[5m])) /
            sum(rate(banking_auth_attempts_total[5m]))
          ) * 100

  - name: system_health
    rules:
      # Service availability
      - record: system:service_availability
        expr: |
          (
            sum(up{job=~".*-service"}) /
            count(up{job=~".*-service"})
          ) * 100

      # Database connection health
      - record: system:database_health
        expr: up{job="postgres"}

      # Cache health
      - record: system:cache_health
        expr: up{job="redis"}