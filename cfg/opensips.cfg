####### Global Parameters #########

log_level=3
stderror_enabled=yes
syslog_enabled=no

socket=udp:*:5060
socket=tcp:*:5060
socket=udp:*:8080

####### Modules Section ########

#set module path
mpath="/usr/lib/x86_64-linux-gnu/opensips/modules/"

loadmodule "tm.so"
loadmodule "rr.so"
loadmodule "sipmsgops.so"
loadmodule "signaling.so"
loadmodule "cfgutils.so"
loadmodule "mi_fifo.so"
loadmodule "proto_tcp.so"
loadmodule "proto_udp.so"
loadmodule "sl.so"

loadmodule "event_datagram.so"
loadmodule "mi_datagram.so"
loadmodule "b2b_entities.so"

modparam("mi_fifo", "fifo_name", "/tmp/opensips_fifo")

modparam("tm", "fr_timeout", 2)
modparam("tm", "fr_inv_timeout", 3)
modparam("tm", "restart_fr_on_each_reply", 0)
modparam("tm", "onreply_avp_mode", 1)

# MI Datagram - OpenSIPS'in OAVC'den MI komutlarını dinlediği yer
# 127.0.0.1 yerine 0.0.0.0 kullanın ki diğer konteynerler erişebilsin
modparam("mi_datagram", "socket_name", "udp:0.0.0.0:8088")

# B2B Entities parametreleri - OAVC'ye yönlendirme için
# ua_server_address parametresi mevcut değil, routing logic'te handle edelim

####### Routing Logic ########

# Main request routing
route {
	
	# Initial request processing
	# Check for unwanted requests
	if (!is_method("INVITE") || has_totag()) {
		send_reply(405, "Method Not Allowed");
		exit;
	}
	
	# B2B UA session başlat ve OAVC'ye yönlendir
	$var(b2b_key) = "call_" + $ci + "_" + $ft;
	ua_session_server_init($var(b2b_key), "rbh");
	xlog("L_NOTICE", "Started new B2B call for $var(b2b_key) - routing to OAVC at 172.20.0.6:8089\n");
	
	# Çağrıyı OAVC'ye yönlendir
	$ru = "sip:" + $rU + "@172.20.0.6:8089";
	
	# Forward the call
	t_on_reply("handle_reply");
	t_relay();
	exit;
}

# Reply route - OAVC'den gelen yanıtları işle
onreply_route[handle_reply] {
	xlog("L_NOTICE", "Reply from OAVC: $rs $rr\n");
}