# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import intent_service_pb2 as intent__service__pb2


class IntentRecognitionStub(object):
    """Intent Recognition service for IVR automation
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ClassifyIntent = channel.unary_unary(
                '/opensips.ai.intent.IntentRecognition/ClassifyIntent',
                request_serializer=intent__service__pb2.ClassifyIntentRequest.SerializeToString,
                response_deserializer=intent__service__pb2.ClassifyIntentResponse.FromString,
                )
        self.ClassifyIntentBatch = channel.unary_unary(
                '/opensips.ai.intent.IntentRecognition/ClassifyIntentBatch',
                request_serializer=intent__service__pb2.ClassifyIntentBatchRequest.SerializeToString,
                response_deserializer=intent__service__pb2.ClassifyIntentBatchResponse.FromString,
                )
        self.GetSupportedIntents = channel.unary_unary(
                '/opensips.ai.intent.IntentRecognition/GetSupportedIntents',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=intent__service__pb2.GetSupportedIntentsResponse.FromString,
                )
        self.UpdateTrainingData = channel.unary_unary(
                '/opensips.ai.intent.IntentRecognition/UpdateTrainingData',
                request_serializer=intent__service__pb2.UpdateTrainingDataRequest.SerializeToString,
                response_deserializer=intent__service__pb2.UpdateTrainingDataResponse.FromString,
                )
        self.HealthCheck = channel.unary_unary(
                '/opensips.ai.intent.IntentRecognition/HealthCheck',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=intent__service__pb2.HealthResponse.FromString,
                )
        self.GetStats = channel.unary_unary(
                '/opensips.ai.intent.IntentRecognition/GetStats',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=intent__service__pb2.StatsResponse.FromString,
                )


class IntentRecognitionServicer(object):
    """Intent Recognition service for IVR automation
    """

    def ClassifyIntent(self, request, context):
        """Classify text into intent categories
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClassifyIntentBatch(self, request, context):
        """Classify multiple texts in batch
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSupportedIntents(self, request, context):
        """Get list of supported intents
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTrainingData(self, request, context):
        """Update model training data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Health check
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStats(self, request, context):
        """Get service statistics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IntentRecognitionServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ClassifyIntent': grpc.unary_unary_rpc_method_handler(
                    servicer.ClassifyIntent,
                    request_deserializer=intent__service__pb2.ClassifyIntentRequest.FromString,
                    response_serializer=intent__service__pb2.ClassifyIntentResponse.SerializeToString,
            ),
            'ClassifyIntentBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.ClassifyIntentBatch,
                    request_deserializer=intent__service__pb2.ClassifyIntentBatchRequest.FromString,
                    response_serializer=intent__service__pb2.ClassifyIntentBatchResponse.SerializeToString,
            ),
            'GetSupportedIntents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSupportedIntents,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=intent__service__pb2.GetSupportedIntentsResponse.SerializeToString,
            ),
            'UpdateTrainingData': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTrainingData,
                    request_deserializer=intent__service__pb2.UpdateTrainingDataRequest.FromString,
                    response_serializer=intent__service__pb2.UpdateTrainingDataResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=intent__service__pb2.HealthResponse.SerializeToString,
            ),
            'GetStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStats,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=intent__service__pb2.StatsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'opensips.ai.intent.IntentRecognition', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IntentRecognition(object):
    """Intent Recognition service for IVR automation
    """

    @staticmethod
    def ClassifyIntent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opensips.ai.intent.IntentRecognition/ClassifyIntent',
            intent__service__pb2.ClassifyIntentRequest.SerializeToString,
            intent__service__pb2.ClassifyIntentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClassifyIntentBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opensips.ai.intent.IntentRecognition/ClassifyIntentBatch',
            intent__service__pb2.ClassifyIntentBatchRequest.SerializeToString,
            intent__service__pb2.ClassifyIntentBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSupportedIntents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opensips.ai.intent.IntentRecognition/GetSupportedIntents',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            intent__service__pb2.GetSupportedIntentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTrainingData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opensips.ai.intent.IntentRecognition/UpdateTrainingData',
            intent__service__pb2.UpdateTrainingDataRequest.SerializeToString,
            intent__service__pb2.UpdateTrainingDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opensips.ai.intent.IntentRecognition/HealthCheck',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            intent__service__pb2.HealthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opensips.ai.intent.IntentRecognition/GetStats',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            intent__service__pb2.StatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
