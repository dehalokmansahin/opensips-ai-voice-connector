# Simple test Dockerfile for build optimization validation
# Multi-stage build without external downloads

# Stage 1: Build dependencies and compile wheels
FROM python:3.10-slim AS build-stage

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    cmake \
    && rm -rf /var/lib/apt/lists/*

# Create wheelhouse directory
WORKDIR /wheels

# Copy requirements files
COPY requirements_simple.txt ./

# Build wheels for all requirements
RUN pip wheel --wheel-dir /wheels -r requirements_simple.txt

# Stage 2: Production runtime (minimal)
FROM python:3.10-slim AS production

# Create app directory and user for security
WORKDIR /app
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy pre-built wheels and install packages
COPY --from=build-stage /wheels /wheels
RUN pip install --no-index --find-links /wheels \
    grpcio>=1.60.0 \
    grpcio-tools>=1.60.0 \
    && rm -rf /wheels /root/.cache/pip

# Copy source code and proto files
COPY proto/ /app/proto/
COPY src/ /app/src/

# Create model and cache directories with proper permissions
RUN mkdir -p /app/model /app/rag_model && \
    chown -R appuser:appuser /app

# Set environment variables
ENV PYTHONPATH=/app:/app/src
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Switch to non-root user for security
USER appuser

# Expose gRPC port
EXPOSE 50052

# Run the service
CMD ["python", "/app/src/llm_grpc_server.py"]